plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
    id 'com.google.android.gms.oss-licenses-plugin'
}

apply from: "$rootDir/module.gradle"
apply from: "$rootDir/deps-all.gradle"
apply from: "$rootDir/deps-feature.gradle"

android {

    namespace itemFinderApplicationId

    defaultConfig {
        applicationId itemFinderApplicationId

        versionCode itemFinderVersionCode.toInteger()
        versionName itemFinderVersionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            debuggable false
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            debuggable true
        }
    }

    signingConfigs {
        debug {
            storeFile file('debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }

        release {
            storeFile file(getValueFromLocalProperties('ITEM_FINDER_STORE_PATH'))
            storePassword getValueFromLocalProperties('ITEM_FINDER_SIGNING_STORE_PASSWORD')
            keyAlias getValueFromLocalProperties('ITEM_FINDER_SIGNING_KEY_ALIAS')
            keyPassword getValueFromLocalProperties('ITEM_FINDER_SIGNING_KEY_PASSWORD')
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }

        release {
            signingConfig signingConfigs.release
        }
    }

    applicationVariants.all { variant ->
        variant.buildConfigField "String", "API_URL_DEV", "\"http://3.39.124.65/\""
        variant.buildConfigField "String", "API_URL", "\"https://www.findthingsdev.shop/\""
        variant.buildConfigField "String", "PRIVACY_HANDLE_URL", "\"https://www.notion.so/734968a40f31422dab2259c1bd7198bf?pvs=4\""
        variant.buildConfigField "String", "TERMS_OF_USE_URL", "\"https://www.notion.so/609b93de11b743eda4502ec1216a5ba1?pvs=4\""
        variant.buildConfigField "String", "OS_ANDROID", "\"$OS_ANDROID\""
        variant.buildConfigField "String", "BUILD_DEBUG", "\"$BUILD_DEBUG\""
        variant.buildConfigField "String", "BUILD_RELEASE", "\"$BUILD_RELEASE\""
    }

    flavorDimensions "version"

    productFlavors {
        var kakaoAppKey = '9d9f2c06711f35c769f88f53e1ca3765'
        dev {
            dimension "version"
            applicationIdSuffix ".dev"
            manifestPlaceholders = [appLabel: "Findthings Dev"]
            resValue("string", "kakao_app_key", kakaoAppKey)
            resValue("string", "kakao_app_key_for_manifest", "kakao${kakaoAppKey}")
        }
        prod {
            dimension "version"
            manifestPlaceholders = [appLabel: "Findthings"]
            resValue("string", "kakao_app_key", kakaoAppKey)
            resValue("string", "kakao_app_key_for_manifest", "kakao${kakaoAppKey}")
        }
    }

}

String getValueFromLocalProperties(String keyName) {
    def propFile = rootProject.file("./local.properties")
    def properties = new Properties()
    properties.load(new FileInputStream(propFile))
    return properties[keyName]
}

dependencies {

    implementation "androidx.core:core-splashscreen:$androidCoreSplashScreenVersion"
    implementation project(':feature:home')
    implementation project(':data')
    implementation project(':feature:space')
    implementation "com.kakao.sdk:v2-user:$kakaoUserVersion" // 카카오 로그인
    implementation "com.google.android.gms:play-services-oss-licenses:$ossLicenseVersion"

}
